name: Deploy to Aliyun

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Check required secrets
        run: |
          [[ -z "${{ secrets.MONGO_URI }}" ]] && echo "Missing MONGO_URI" && exit 1
          [[ -z "${{ secrets.NEXTAUTH_SECRET }}" ]] && echo "Missing NEXTAUTH_SECRET" && exit 1
          [[ -z "${{ secrets.NEXTAUTH_URL }}" ]] && echo "Missing NEXTAUTH_URL" && exit 1
          [[ -z "${{ secrets.GOOGLE_APP_CLIENT_ID }}" ]] && echo "Missing GOOGLE_APP_CLIENT_ID" && exit 1
          [[ -z "${{ secrets.GOOGLE_APP_CLIENT_SECRET }}" ]] && echo "Missing GOOGLE_APP_CLIENT_SECRET" && exit 1
          [[ -z "${{ secrets.ALIYUN_USERNAME }}" ]] && echo "Missing ALIYUN_USERNAME" && exit 1
          [[ -z "${{ secrets.ALIYUN_PASSWORD }}" ]] && echo "Missing ALIYUN_PASSWORD" && exit 1
          [[ -z "${{ secrets.ECS_HOST }}" ]] && echo "Missing ECS_HOST" && exit 1
          [[ -z "${{ secrets.ECS_USERNAME }}" ]] && echo "Missing ECS_USERNAME" && exit 1
          [[ -z "${{ secrets.ECS_SSH_KEY }}" ]] && echo "Missing ECS_SSH_KEY" && exit 1
          echo "All required secrets are set"

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          version: 8.15.4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Debug pnpm environment
        run: |
          echo "Current directory:"
          pwd
          echo "Directory contents:"
          ls -la
          echo "pnpm version:"
          pnpm --version
          echo "Node version:"
          node --version

      - name: Install dependencies
        run: |
          pnpm install --no-frozen-lockfile

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to Aliyun Container Registry
        uses: docker/login-action@v3
        with:
          registry: crpi-ne97tccqwbmfjjvf.cn-shanghai.personal.cr.aliyuncs.com
          username: ${{ secrets.ALIYUN_USERNAME }}
          password: ${{ secrets.ALIYUN_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/amd64
          tags: crpi-ne97tccqwbmfjjvf.cn-shanghai.personal.cr.aliyuncs.com/temple_22/temple-h5-editor:${{ github.sha }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
          build-args: |
            MONGO_URI=${{ secrets.MONGO_URI }}
            NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }}
            NEXTAUTH_URL=${{ secrets.NEXTAUTH_URL }}
            GOOGLE_APP_CLIENT_ID=${{ secrets.GOOGLE_APP_CLIENT_ID }}
            GOOGLE_APP_CLIENT_SECRET=${{ secrets.GOOGLE_APP_CLIENT_SECRET }}
            WECHAT_PAY_APP_ID=${{ secrets.WECHAT_PAY_APP_ID }}
            WECHAT_APP_SECRET=${{ secrets.WECHAT_APP_SECRET }}
            WECHAT_PAY_MCH_ID=${{ secrets.WECHAT_PAY_MCH_ID }}
            WECHAT_PAY_KEY=${{ secrets.WECHAT_PAY_KEY }}
            WECHAT_PAY_PFX_PATH=${{ secrets.WECHAT_PAY_PFX_PATH }}
            WECHAT_PAY_NOTIFY_URL=${{ secrets.WECHAT_PAY_NOTIFY_URL }}
            ALIYUN_OSS_ACCESS_KEY_ID=${{ secrets.ALIYUN_OSS_ACCESS_KEY_ID }}
            ALIYUN_OSS_ACCESS_KEY_SECRET=${{ secrets.ALIYUN_OSS_ACCESS_KEY_SECRET }}
            ALIYUN_OSS_BUCKET=${{ secrets.ALIYUN_OSS_BUCKET }}
            ALIYUN_OSS_REGION=${{ secrets.ALIYUN_OSS_REGION }}
            
      - name: Deploy to ECS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.ECS_HOST }}
          username: ${{ secrets.ECS_USERNAME }}
          key: ${{ secrets.ECS_SSH_KEY }}
          port: 23
          debug: true
          script: |
            set -e
            cd /app/temple-h5-editor
            
            # 检查 docker-compose 版本
            docker-compose version
            
            # 登录阿里云容器仓库
            docker login --username ${{ secrets.ALIYUN_USERNAME }} --password ${{ secrets.ALIYUN_PASSWORD }} crpi-ne97tccqwbmfjjvf.cn-shanghai.personal.cr.aliyuncs.com
            
            cat > docker-compose.yml << 'EOL'
            version: '3.3'
            services:
              web:
                image: crpi-ne97tccqwbmfjjvf.cn-shanghai.personal.cr.aliyuncs.com/temple_22/temple-h5-editor:${IMAGE_TAG}
                network_mode: "host"
                environment:
                  - MONGO_URI=${{ secrets.MONGO_URI }}
                  - NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }}
                  - NEXTAUTH_URL=${{ secrets.NEXTAUTH_URL }}
                  - GOOGLE_APP_CLIENT_ID=${{ secrets.GOOGLE_APP_CLIENT_ID }}
                  - GOOGLE_APP_CLIENT_SECRET=${{ secrets.GOOGLE_APP_CLIENT_SECRET }}
                  - WECHAT_PAY_APP_ID=${{ secrets.WECHAT_PAY_APP_ID }}
                  - WECHAT_APP_SECRET=${{ secrets.WECHAT_APP_SECRET }}
                  - WECHAT_PAY_MCH_ID=${{ secrets.WECHAT_PAY_MCH_ID }}
                  - WECHAT_PAY_KEY=${{ secrets.WECHAT_PAY_KEY }}
                  - WECHAT_PAY_PFX_PATH=${{ secrets.WECHAT_PAY_PFX_PATH }}
                  - WECHAT_PAY_NOTIFY_URL=${{ secrets.WECHAT_PAY_NOTIFY_URL }}
                  - ALIYUN_OSS_ACCESS_KEY_ID=${{ secrets.ALIYUN_OSS_ACCESS_KEY_ID }}
                  - ALIYUN_OSS_ACCESS_KEY_SECRET=${{ secrets.ALIYUN_OSS_ACCESS_KEY_SECRET }}
                  - ALIYUN_OSS_BUCKET=${{ secrets.ALIYUN_OSS_BUCKET }}
                  - ALIYUN_OSS_REGION=${{ secrets.ALIYUN_OSS_REGION }}
                restart: always
            EOL
            
            echo "IMAGE_TAG=${{ github.sha }}" > .env
            docker-compose pull
            docker-compose up -d
